<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/04/hello-world/"/>
      <url>/2019/04/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>print char if not told how many</title>
      <link href="/2019/04/03/print-char-if-not-told-how-many/"/>
      <url>/2019/04/03/print-char-if-not-told-how-many/</url>
      
        <content type="html"><![CDATA[<p>链接：<a href="https://ac.nowcoder.com/acm/problem/22224" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/problem/22224</a><br>来源：牛客网</p><p>题目描述<br>输入一行字符串，原样输出这个字符串。</p><p>输入描述:<br>输入一行，包含一个字符串。<br>输出描述:<br>输出一个字符串。<br>示例1<br>输入<br>复制<br>oi er<br>输出<br>复制<br>oi er</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输出金字塔图形</title>
      <link href="/2019/04/01/%E8%BE%93%E5%87%BA%E9%87%91%E5%AD%97%E5%A1%94%E5%9B%BE%E5%BD%A2/"/>
      <url>/2019/04/01/%E8%BE%93%E5%87%BA%E9%87%91%E5%AD%97%E5%A1%94%E5%9B%BE%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<p>这种题应该先想办法输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * *</code></pre><p>这种靠一边的，然后再加空格变成</p><pre><code>        *      * * *    * * * * *  * * * * * * ** * * * * * * * *</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*for (int j = 0; j &lt; n - i - 1; j++) &#123;</span></span><br><span class="line"><span class="comment">            printf(" ");</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是输出双层金字塔</p><pre><code>    *   ***  ***** **************** *******  *****   ***    *</code></pre><p>那么我们先输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * *</code></pre><p>然后再输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * ** * * * * * ** * * * ** * **</code></pre><p>然后再增加空格</p><pre><code>        *      * * *    * * * * *  * * * * * * ** * * * * * * * ** * * * * * ** * * * ** * **</code></pre><p>然后稍微改一下就可以变成目标形状</p><pre><code>    *   ***  ***** **************** *******  *****   ***    *</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt; <span class="number">-1</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选村长</title>
      <link href="/2019/04/01/%E9%80%89%E6%9D%91%E9%95%BF/"/>
      <url>/2019/04/01/%E9%80%89%E6%9D%91%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛村正在进行村长选举，投票人一人一票，牛可乐是候选人A（投票代号为1）、牛能是候选人B（投票代号为2）和牛妹是候选人C（投票代号为3），其他投票代号无效。<br>投票列表用以-1表示结束，请分别统计出他们的得票数。谁的得票超过全部投票人数的半数，就输出谁当选为村长，如“A-yes”表示A当选，全部不过半数，输出“all-NO”。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><p>输入一行，若干个整数，以-1结尾</p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><p>输出五行，前三行表示三个候选人的表票数，然后是总的有效票数，最后一行表示选举结果。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>输入</p><pre><code>1  1  3  2  1  3  2  1  3  3  1  2  4  1  4  1  2   1  2  1 1 -1</code></pre><p>输出</p><pre><code>A=10B=5C=4Tot=19all-NO</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, C = <span class="number">0</span>, Tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != <span class="string">'-'</span>) &#123;</span><br><span class="line">        <span class="comment">//printf("%c", c);</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'1'</span>) &#123;</span><br><span class="line">            A += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'2'</span>) &#123;</span><br><span class="line">            B += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'3'</span>) &#123;</span><br><span class="line">            C += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A=%d\n"</span>, A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"B=%d\n"</span>, B);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"C=%d\n"</span>, C);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Tot=%d\n"</span>, Tot);</span><br><span class="line">    <span class="keyword">if</span> (A &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"A-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (B &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"B-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (C &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"C-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"all-NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sum of all proper divisors of a natural number</title>
      <link href="/2019/04/01/Sum-of-all-proper-divisors-of-a-natural-number/"/>
      <url>/2019/04/01/Sum-of-all-proper-divisors-of-a-natural-number/</url>
      
        <content type="html"><![CDATA[<p>Given a natural number, calculate sum of all its proper divisors. A proper divisor of a natural number is the divisor that is strictly less than the number.</p><p>For example, number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.</p><p>Examples :</p><pre><code>Input : num = 10Output: 8// proper divisors 1 + 2 + 5 = 8 Input : num = 36Output: 55// proper divisors 1 + 2 + 3 + 4 + 6 + 9 + 12 + 18 = 55 </code></pre><p>This problem has very simple solution, we all know that for any number ‘num’ all its divisors are always less than and equal to ‘num/2’ and all prime factors are always less than and equal to sqrt(num). So we iterate through ‘i’ till i&lt;=sqrt(num) and for any ‘i’ if it divides ‘num’ , then we get two divisors ‘i’ and ‘num/i’ , continuously add these divisors but for some numbers divisors ‘i’ and ‘num/i’ will same in this case just add only one divisor , e.g; num=36 so for i=6 we will get (num/i)=6 , that’s why we will at 6 in the summation only once. Finally we add one as one is divisor of all natural numbers.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++ program to find sum of all divisors of </span></span><br><span class="line"><span class="comment">// a natural number </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to calculate sum of all proper divisors </span></span><br><span class="line"><span class="comment">// num --&gt; given natural number </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divSum</span><span class="params">(<span class="keyword">int</span> num)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="comment">// Final result of summation of divisors </span></span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// find all divisors which divides 'num' </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=<span class="built_in">sqrt</span>(num); i++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// if 'i' is divisor of 'num' </span></span><br><span class="line"><span class="keyword">if</span> (num%i==<span class="number">0</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// if both divisors are same then add </span></span><br><span class="line"><span class="comment">// it only once else add both </span></span><br><span class="line"><span class="keyword">if</span> (i==(num/i)) </span><br><span class="line">result += i; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">result += (i + num/i); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Add 1 to the result as 1 is also a divisor </span></span><br><span class="line"><span class="keyword">return</span> (result + <span class="number">1</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Driver program to run the case </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> num = <span class="number">36</span>; </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; divSum(num); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>牛村村口要架设一个矩形的广告屏，村长要求广告屏的总像素必须为n，还要求广告屏的长和宽最大可能的接近，而且宽不能大于长，村长找你来计算一下宽和长分别为多少？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">sqrt</span>(n); i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, n / i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能被3整除且至少有一位数字是5</title>
      <link href="/2019/04/01/%E8%83%BD%E8%A2%AB3%E6%95%B4%E9%99%A4%E4%B8%94%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97%E6%98%AF5/"/>
      <url>/2019/04/01/%E8%83%BD%E8%A2%AB3%E6%95%B4%E9%99%A4%E4%B8%94%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97%E6%98%AF5/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输出1~n中能被3整除，且至少有一位数字是5的所有整数.</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><p>输入一行，包含一个整数n。(1 &lt;= n &lt;= 100000)</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>输入</p><pre><code>50</code></pre><p>输出</p><pre><code>1545</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> gewei = i % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> shiwei = (i / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> baiwei = (i / <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> qianwei = (i / <span class="number">1000</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> wanwei = (i / <span class="number">10000</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> shiwanwei = (i / <span class="number">100000</span>) % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">                (i % <span class="number">3</span> == <span class="number">0</span>) &amp;&amp;</span><br><span class="line">                (</span><br><span class="line">                        gewei == <span class="number">5</span> ||</span><br><span class="line">                        shiwei == <span class="number">5</span> ||</span><br><span class="line">                        baiwei == <span class="number">5</span> ||</span><br><span class="line">                        qianwei == <span class="number">5</span> ||</span><br><span class="line">                        wanwei == <span class="number">5</span> ||</span><br><span class="line">                        shiwanwei == <span class="number">5</span></span><br><span class="line">                        )</span><br><span class="line">            ) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断回文数</title>
      <link href="/2019/04/01/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/2019/04/01/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>判断一个数是否为回文数。</p><p>设n是一任意自然数。若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如，若n=1234321，则称n为一回文数；但若n=1234567，则n不是回文数</p><p>实例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, reversedInteger = <span class="number">0</span>, remainder, originalInteger;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"> </span><br><span class="line">    originalInteger = n;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="keyword">while</span>( n!=<span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        remainder = n%<span class="number">10</span>;</span><br><span class="line">        reversedInteger = reversedInteger*<span class="number">10</span> + remainder;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 判断</span></span><br><span class="line">    <span class="keyword">if</span> (originalInteger == reversedInteger)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 是回文数。"</span>, originalInteger);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 不是回文数。"</span>, originalInteger);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断数字是几位数</title>
      <link href="/2019/04/01/%E5%88%A4%E6%96%AD%E6%95%B0%E5%AD%97%E6%98%AF%E5%87%A0%E4%BD%8D%E6%95%B0/"/>
      <url>/2019/04/01/%E5%88%A4%E6%96%AD%E6%95%B0%E5%AD%97%E6%98%AF%E5%87%A0%E4%BD%8D%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>用户输入数字，判断该数字是几位数。</p><p>实例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// n = n/10</span></span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数字是 %d 位数。"</span>, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Greatest Common Divisor Algorithm</title>
      <link href="/2019/03/31/Greatest-Common-Divisor-Algorithm-md/"/>
      <url>/2019/03/31/Greatest-Common-Divisor-Algorithm-md/</url>
      
        <content type="html"><![CDATA[<h1 id="Greatest-Common-Divisor-Algorithm"><a href="#Greatest-Common-Divisor-Algorithm" class="headerlink" title="Greatest Common Divisor Algorithm"></a>Greatest Common Divisor Algorithm</h1><pre><code class="c++"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>{    <span class="keyword">int</span> c = a % b;    <span class="keyword">if</span> (c != <span class="number">0</span>) {        <span class="keyword">return</span> gcd(b, c);    } <span class="keyword">else</span> {        <span class="keyword">return</span> b;    }}<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{    <span class="keyword">int</span> a, b;    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);    <span class="keyword">if</span> (a &gt;= b) {        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, gcd(a, b));    } <span class="keyword">else</span> {        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, gcd(b, a));    }    <span class="keyword">return</span> <span class="number">0</span>;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Whether a binary tree is balanced or not.md</title>
      <link href="/2019/03/31/Whether-a-binary-tree-is-balanced-or-not-md/"/>
      <url>/2019/03/31/Whether-a-binary-tree-is-balanced-or-not-md/</url>
      
        <content type="html"><![CDATA[<h1 id="Whether-a-binary-tree-is-balanced-or-not"><a href="#Whether-a-binary-tree-is-balanced-or-not" class="headerlink" title="Whether a binary tree is balanced or not"></a>Whether a binary tree is balanced or not</h1><p>The definition of a balanced binary tree is :</p><p>left sub-tree is balanced &amp;&amp; right sub-tree is balanced &amp;&amp; abs(height(left) - height(right))  &lt;= 1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CPP program to check if </span></span><br><span class="line"><span class="comment">a tree is height-balanced or not */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* A binary tree node has data, </span></span><br><span class="line"><span class="comment">pointer to left child and </span></span><br><span class="line"><span class="comment">a pointer to right child */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">  <span class="keyword">public</span>: </span><br><span class="line">  <span class="keyword">int</span> data; </span><br><span class="line">  node* left; </span><br><span class="line">  node* right; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Returns the height of a binary tree */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">height</span><span class="params">(node* node)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Returns true if binary tree </span></span><br><span class="line"><span class="comment">with root as root is height-balanced */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isBalanced</span><span class="params">(node *root)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">int</span> lh; <span class="comment">/* for height of left subtree */</span></span><br><span class="line">  <span class="keyword">int</span> rh; <span class="comment">/* for height of right subtree */</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If tree is empty then return true */</span></span><br><span class="line">  <span class="keyword">if</span>(root == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Get the height of left and right sub trees */</span></span><br><span class="line">  lh = height(root-&gt;left); </span><br><span class="line">  rh = height(root-&gt;right); </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>( <span class="built_in">abs</span>(lh-rh) &lt;= <span class="number">1</span> &amp;&amp; </span><br><span class="line">    isBalanced(root-&gt;left) &amp;&amp; </span><br><span class="line">    isBalanced(root-&gt;right)) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If we reach here then </span></span><br><span class="line"><span class="comment">  tree is not height-balanced */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* UTILITY FUNCTIONS TO TEST isBalanced() FUNCTION */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* returns maximum of two integers */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">return</span> (a &gt;= b)? a: b; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function Compute the "height" </span></span><br><span class="line"><span class="comment">of a tree. Height is the number of </span></span><br><span class="line"><span class="comment">nodes along the longest path from </span></span><br><span class="line"><span class="comment">the root node down to the farthest leaf node.*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">height</span><span class="params">(node* node)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">/* base case tree is empty */</span></span><br><span class="line">  <span class="keyword">if</span>(node == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If tree is not empty then </span></span><br><span class="line"><span class="comment">  height = 1 + max of left </span></span><br><span class="line"><span class="comment">    height and right heights */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span> + max(height(node-&gt;left), </span><br><span class="line">        height(node-&gt;right)); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Helper function that allocates </span></span><br><span class="line"><span class="comment">a new node with the given data </span></span><br><span class="line"><span class="comment">and NULL left and right pointers. */</span></span><br><span class="line"><span class="function">node* <span class="title">newNode</span><span class="params">(<span class="keyword">int</span> data)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  node* Node = <span class="keyword">new</span> node(); </span><br><span class="line">  Node-&gt;data = data; </span><br><span class="line">  Node-&gt;left = <span class="literal">NULL</span>; </span><br><span class="line">  Node-&gt;right = <span class="literal">NULL</span>; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>(Node); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Driver code </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  node *root = newNode(<span class="number">1</span>); </span><br><span class="line">  root-&gt;left = newNode(<span class="number">2</span>); </span><br><span class="line">  root-&gt;right = newNode(<span class="number">3</span>); </span><br><span class="line">  root-&gt;left-&gt;left = newNode(<span class="number">4</span>); </span><br><span class="line">  root-&gt;left-&gt;right = newNode(<span class="number">5</span>); </span><br><span class="line">  root-&gt;left-&gt;left-&gt;left = newNode(<span class="number">8</span>); </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(isBalanced(root)) </span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Tree is balanced"</span>; </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Tree is not balanced"</span>; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// This code is contributed by rathbhupendra</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>How to publish my writing.md</title>
      <link href="/2019/03/31/How-to-publish-my-writing-md/"/>
      <url>/2019/03/31/How-to-publish-my-writing-md/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Publish-My-Writing-Next-Time"><a href="#How-to-Publish-My-Writing-Next-Time" class="headerlink" title="How to Publish My Writing Next Time"></a>How to Publish My Writing Next Time</h1><p>First, type in </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo new <span class="string">"How to * .md"</span></span><br></pre></td></tr></table></figure><p>then in folder /source/_posts/ we can see our newly generated markdown file.</p><p>Then open and edit it.</p><p>After editing, type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>g standards for generate</p><p>Then in order to preview, we can type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo server -p 8080</span><br></pre></td></tr></table></figure><p>p standards for port</p><p>then we can preview in our browser.</p><p>If it is ok, we can type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo d</span><br></pre></td></tr></table></figure><p>d standards for deploy</p><p>to publish it.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
