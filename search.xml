<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>printf输出时%d前显示特定0</title>
      <link href="/blog/2019/04/11/printf%E8%BE%93%E5%87%BA%E6%97%B6-d%E5%89%8D%E6%98%BE%E7%A4%BA%E7%89%B9%E5%AE%9A0/"/>
      <url>/blog/2019/04/11/printf%E8%BE%93%E5%87%BA%E6%97%B6-d%E5%89%8D%E6%98%BE%E7%A4%BA%E7%89%B9%E5%AE%9A0/</url>
      
        <content type="html"><![CDATA[<p>printf()函数输出的时候可以用</p><p>printf(“%03d”, x);</p><p>这种方式使得比如说<br>x == 9，那么输出009<br>x == 15，那么输出015<br>x == 385，那么输出385</p><p>掌握以下这个小技巧</p>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> tricks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件学院本科生应该怎么学习</title>
      <link href="/blog/2019/04/06/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A2%E6%9C%AC%E7%A7%91%E7%94%9F%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E5%AD%A6%E4%B9%A0/"/>
      <url>/blog/2019/04/06/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A2%E6%9C%AC%E7%A7%91%E7%94%9F%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本人今年北软研究生毕业，本科是35所示范性软院之一，在毕业之际，回顾软院的7年学习生活，很感慨，写点东西给软件学院的师弟师妹们。</p><p>今年软件工程被提升至一级学科，没有挂在计算机科学之下了，而且软件学院开始招收工程博士生了，真是可喜可贺。</p><p>我读软件学院本科的时候，软院才刚成立不久，35所示范性软院之一，那个时候想找个师兄问一问大学该怎么度过，软院第一届的师兄们都还没毕业呢，也很懵懂，咋给我经验呢。只好自己摸索着学习了。现在我都软院研究生毕业了，就让我来给大家讲讲在软件学院的本科该如何学习吧。</p><p>大学本科的教育重点是基础教育，软件学院也应该是（但实际做法可能不是）。</p><p>我觉得本科就是要学习基础知识，学软件首先需做到两点：</p><p>第一、精通一门编程语言；</p><p>第二、精通算法。</p><p>做到这两点，你本科毕业就能找到不错的工作了。对与找工作，j2ee跟.net都是锦上添花的东西，利用大三的选修课，或者大三的暑假学学，大专生都只学三个月的技术，你难道要学四年吗？切不可本末倒置，得了芝麻，丢了西瓜。</p><p>大学毕业的时候，有的拿着10+w的年薪，在大公司做软件工程师，而有的连个工作也找不到。造成这些差距的原因是什么？我觉得主要在课后。大家都一起上课，你能学到的别人也能学到，而且，纸上得来终觉浅，绝知此事要躬行。课后花的功夫就形成了的差距。大学里，老师只负责教好自己的课，你课后干什么没人约束，所以，一定要安排好自己课后时间。所以，这篇文章会告诉怎么安排课后的时间。</p><p>另外，编程高手都是喜欢看书的。一定要看经典的、有营养的书，别看垃圾书。选择书籍的时候，你可去豆瓣网看看书评，买好书才能节约你的时间，看了垃圾书浪费时间。建议多看国外计算机名校的教材，国内的好书不多；编程高手一定是喜欢动手的，课后多参加编程活动。李开复曾建议计算机学生大学本科四年，应该写10w行代码。</p><p>我对我的本科时的软件学院教学方案不是很赞成。第一、教一些大而空的东西。软件学院教一些诸如软件工程的东西，对编程没有太多实际的帮助（至少以本科生的水平来看，吸收不了那么多）。计算机领域的有点难度、有技术含量的东西可能并不会教给你。可能是由于当时的软院还在摸索阶段吧。第二、喜欢重点教一些工具的使用。比如asp.net。这些都是招式，不是内功。我觉得，本科阶段学习一定是以计算机基础为核心的。第三、对学生的定位。学院把教学重点放在web编程上，培养了大量的web程序员。这些不是不能教，我的意思是，不能当做重点来教。本人也是学过j2ee的。</p><p>如果你想从事更高端的软件编程工作，对自己的要求就不能太低哦。所以，我写这篇文章主要目的是劝你往高层次看齐，做高端的软件工程师，比如：算法设计，数据挖掘，图像处理，网络应用，游戏编程，计算机安全，分布式系统设计，嵌入式系统之类的，这些要求对计算机的理解更深。</p><p>好吧，开始我的建议吧。</p><p>你大一、大二很闲吗？是的话就太危险了。我觉得这是你能不能成为编程高手的关键时期哦。如果你用两年的时间都没喜欢上编程，以后也很难喜欢上。这是你训练编程能力的最佳时期，大三再来练习，时间就有点短。如果你有大把的时间，并且迫切希望知道怎么做的话，下面的内容就是回答你的问题的。</p><p>精通一门编程语言</p><p>讲讲大一。如果你中学的时候没接触电脑，那就先练习一下打字吧，因为打字太慢会影响编程的，安装一个金山打字通，每天睡觉之前打字30分钟，坚持一个月。买个笔记本，现在笔记本便宜了，不像我上本科那会用台式机，配置的话内存至少2G，CPU频率过得去就行，价格在4-5k就可以，实在没钱就买神舟笔记本，据说有几款性价比不错。笔记本是用来写程序的，不是玩的。</p><p>大一是肯定学编程语言的，不管学的是哪门语言，都要做到精通。精通一门就好了，开始的时候别想学太多，这样对你掌握语言反而不好。我建议你学C++，因为我学这个，嘿嘿。学习C++，主要是学习面向对象的思想，还有要清楚C++是如何分配内存的，以及派生，多态，重载，虚函数，构造析构，STL等，特别关注内存泄露。如果是入门学习的话，建议你看看书籍《Essential C++》，《C++ Primer》，然后再去读读《C++编程思想》，《Effective C++》，《深入理解C++对象模型》，《设计模式》这几本书。编程环境建议使用VC++，或者Linux上的GCC。</p><p>如果你是想做java程序员的话，java就简单许多了，经典的书籍也很多，比如《Java编程思想》，自己网上搜一搜吧。</p><p>当然，大一你可能还会学其它东西，但是精通一门编程语言是你最重要的任务。</p><p>算法是软实力的体现</p><p>大二的时候，该学数据解构和算法了吧。软件学院的学生，常号称自己动手能力强，真的强吗？你听说过ACM竞赛吗？如果想证明自己动手能力强，就该去参加这个程序竞赛。搞.net，只会拖控件这也叫动手能力强？想想自己本科那会真是天真啊。</p><p>程序=数据解构+算法，这个著名的公式在很多计算机编程书籍里都出现了。可能你很多师兄还告诉你，算法不实用，毕业之后用不着，对于一般的编码人员的确是很少用到。但是，你想做到高级软件工程师，这些都是你默认要擅长的哦。还有，越好的公司，对这个要求就越高。本科、研究生毕业能直接进微软，百度的，都是算法的高手。</p><p>如果你用大二一年的时间去参加ACM竞赛，这绝对对你的职业生涯产生不可估量的影响。如果你基础好，应该从大一的下学期就参加。最好经常去北大，浙大的ACM网站做题。买几本算法书，如果是入门级别，给你推荐的书籍有：《数据解构与算法C++描述》，《算法竞赛入门经典》（刘汝佳），《编程珠玑》，提高的书籍有：《算法艺术与信息学竞赛》（刘汝佳、黄亮），《实用算法的分析与程序设计》（吴文虎、王建德）。这些书在书店或者当当网上都可以买到。如果你周围的同学有对编程感兴趣的，可以一起报名参赛ACM，这个比赛是三个人一组的。本人本科的时候，软件学院对于ACM竞赛一点也不重视，很多软院的同学不知道有这个东西的存在。我跟几个同学经常去参加比赛，虽然没获得好名次，但是对本人的编程能力有很大的提高。如果你大一大二不是很忙，又没有参加这个比赛来锻炼自己，确实有些可惜。</p><p>观察清华，上交，浙大，北大这些计算机名校，每年都有本科生在国际的ACM比赛中拿奖。在北大软件学院读研究生，我了解到北大计算机的本科生有很多都参加这个比赛，基本上每个学期都举行全校级别的比赛。北大计算机也开了ACM的相关培训课程，所以北大计算机本科生的算法实力都非同一般啊。清华计算机的吴文虎老师是国家ACM竞赛的教练，上海交大计算机也有专门的ACM培训班，今年浙大是ACM竞赛世界冠军。这说明，这些计算机名校都很看重算法吧。虽说算法不是计算机的一切，但是反应了这些院系学生的“软实力”，这跟各个学校的软件学院一比，软件学院的学生便显得“软实力”不够了。</p><p>在大一大二，计算机的基础课要好好学的，比如数据库，离散数学（学学组合数学），编译原理，操作系统原理（建议学学Linux），计算机图形学等，都是不错的课程。我本科那会，学院不很重视计算机硬件的教学，这不利于编程能力的提高。如果你的本科学院也不够重视，建议你大二的时候自己去钻研，推荐你看《深入理解计算机系统》这本书，里面介绍了很多浅显的硬件知识，世界上很多计算机名校都教这本书。</p><p>大二可能会学很多专业基础课，但是算法是重中之重。</p><p>为找工作积累技术</p><p>大三是专业课集中的一年吧。《软件工程》的本本是要读一下的，不过别报太高期望，以本科生的见识和功底很难吸收其精华，但是里面的方法论可以拿来读读，以后慢慢体会吧。可以读一读《人月神话》，《代码大全》，这都是软件工程领域巅峰之作。</p><p>如果你打算毕业之后做一个java程序员，你可以学学j2ee（主要是MVC架构），现在的参考书真多，我也就不推荐了。当然，你还得学学各个开源的框架，比较流行的有Hibernate，Spring，Struts，最好研究一下这些框架的源码（选一个来研究）。我本科那会流行这些，我好几年不搞这个了。</p><p>如果是想做.net程序员，那就简单多了，熟悉各个控件的使用。</p><p>你可能还得补充一些其他知识：比如html，javascript，ajax（jquery），css之类的；Linux服务器的搭建，Shell、Python脚本编程，mysql数据库安装备份，apache服务器、网络管理等。比较高级的一些还包括：分布式图片服务器设计，数据挖掘等。还是要看很多书，写很多程序，别限制自己的眼界，这里面有很多值得研究的课题，比如如何架构一个图片分享的网站等。</p><p>如果你还是坚持做一个C++程序员的话，太好了，跟我是一个阵营的。你可以学学MFC程序设计，这方面的书籍有《windows核心程序设计》《深入浅出MFC》。你可以考虑加上OpenCV，使用VC++搞游戏编程。如果你将来读研，会使用C++，对做科研是很有帮助的，比如做图像处理，网络编程，嵌入式等。 </p><p>切不可东学一下，西学一下，不管你走哪条技术路线，要精通。</p><p>实习和就业</p><p>大四的实习和找工作。软院的学生在大四都要出去实习至少6个月吧。如果大学四年都在认真编程，毕业之后找份工作是很容易的，但是找什么样的工作才是我们关心的。我建议大家在实习的时候一定要找准。尽量去一些好点的公司实习，然后留下来，这样你就不需要再投简历笔试面试地找工作了。本人认为好点的软件公司有：腾讯，阿里巴巴，淘宝，百度，华为，人人网，盛大，网易，新浪，深信服，华为3COM，金山，金蝶，用友，toplink。深圳也有一些小的IT公司待遇也不错，这个可以自己去网上搜啦。</p><p>微软，google，intel，ibm，甲骨文，这些外企基本上都只招硕士，如果你能进入这些公司实习，得打听一下能不能留下来。</p><p>如果实习不打算留下来，就得准备参加笔试了，算法是肯定会考察的，还有就是计算机的基础知识了。总之，找工作是容易的，找个好工作才是你的目标哦。</p><p>现在大家常说程序员是IT民工，这不无道理，如果你在一家IT公司的软件生产线上干着一些不重要、重复体力的活，人家想把你换掉就换掉，那你就是IT民工。所以大家在工作中应注意学习公司的核心技术。如果你掌握了公司的核心技术，还dan？如果真那样，你可以自己出去开公司了。</p><p>另外，也有些同学想创业，本人没这方面的经验，不敢乱说，但是如果你想好了就去做吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 过来人谈学习方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode简单 104</title>
      <link href="/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-104/"/>
      <url>/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-104/</url>
      
        <content type="html"><![CDATA[<p>这个题已经写了好几遍了，就是求二叉树的高度的问题。<br>一定要背下来。经常考。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果root为空</span></span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (root-&gt;left == <span class="literal">NULL</span> &amp;&amp; root-&gt;right == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + max(maxDepth(root-&gt;left), maxDepth(root-&gt;right));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode简单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode简单 237</title>
      <link href="/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-237/"/>
      <url>/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-237/</url>
      
        <content type="html"><![CDATA[<p>这个题在剑指offer上出现过。<br>就是把后一个节点的值复制到当前节点，然后把后一个节点删掉。<br>leetcode上free的话好像会报错，就省了。代码就两行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteNode</span><span class="params">(ListNode* node)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        node-&gt;val = node-&gt;next-&gt;val;</span><br><span class="line">        node-&gt;next = node-&gt;next-&gt;next;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//ListNode *next= node-&gt;next;</span></span><br><span class="line">        <span class="comment">//free(next);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode简单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode简单 709</title>
      <link href="/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-709/"/>
      <url>/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-709/</url>
      
        <content type="html"><![CDATA[<p>这个题直接暴力循环就能过</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">toLowerCase</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> result = <span class="string">""</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i] &gt;= <span class="string">'A'</span> &amp;&amp; str[i] &lt;= <span class="string">'Z'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                result += (<span class="string">'a'</span> + str[i] - <span class="string">'A'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                result += str[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode简单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode简单 771</title>
      <link href="/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-771/"/>
      <url>/blog/2019/04/05/leetcode%E7%AE%80%E5%8D%95-771/</url>
      
        <content type="html"><![CDATA[<p>暴力求解法， 两个循环，复杂度$O(n^2)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="built_in">string</span> J, <span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> lenJ = J.size();</span><br><span class="line">        <span class="keyword">int</span> lenS = S.size();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenS; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lenJ; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (S[i] == J[j]) </span><br><span class="line">                &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode简单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础堆算法</title>
      <link href="/blog/2019/04/05/%E5%9F%BA%E7%A1%80%E5%A0%86%E7%AE%97%E6%B3%95/"/>
      <url>/blog/2019/04/05/%E5%9F%BA%E7%A1%80%E5%A0%86%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapify</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n, <span class="keyword">int</span> i)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> largest = i; <span class="comment">// Initialize largest as root </span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">2</span>*i + <span class="number">1</span>; <span class="comment">// left = 2*i + 1 </span></span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">2</span>*i + <span class="number">2</span>; <span class="comment">// right = 2*i + 2 </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// If left child is larger than root </span></span><br><span class="line">    <span class="keyword">if</span> (l &lt; n &amp;&amp; arr[l] &gt; arr[largest]) </span><br><span class="line">        largest = l; </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// If right child is larger than largest so far </span></span><br><span class="line">    <span class="keyword">if</span> (r &lt; n &amp;&amp; arr[r] &gt; arr[largest]) </span><br><span class="line">        largest = r; </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// If largest is not root </span></span><br><span class="line">    <span class="keyword">if</span> (largest != i) </span><br><span class="line">    &#123; </span><br><span class="line">        swap(arr[i], arr[largest]); </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Recursively heapify the affected sub-tree </span></span><br><span class="line">        heapify(arr, n, largest); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buildHeap</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Build heap (rearrange array) </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">        heapify(arr, n, i); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main function to do heap sort </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    buildHeap(arr, n);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// One by one extract an element from heap </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// Move current root to end </span></span><br><span class="line">        swap(arr[<span class="number">0</span>], arr[i]); </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// call max heapify on the reduced heap </span></span><br><span class="line">        heapify(arr, i, <span class="number">0</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>掌握了这3段程序就能写出堆排序的程序了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> heap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>binary search template</title>
      <link href="/blog/2019/04/04/binary-search-template/"/>
      <url>/blog/2019/04/04/binary-search-template/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param nums: The integer array.</span></span><br><span class="line"><span class="comment">     * @param target: Target to find.</span></span><br><span class="line"><span class="comment">     * @return: The first position of target. Position starts from 0.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write your code here</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (nums.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = nums.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (start + <span class="number">1</span> &lt; end) &#123;</span><br><span class="line">            mid = start + (end - start) / <span class="number">2</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) &#123;</span><br><span class="line">                end = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) &#123;</span><br><span class="line">                start = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                end = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (nums[start] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> start;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (nums[end] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> end;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 二分查找 </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>class Solution {</title>
      <link href="/blog/2019/04/04/class-Solution/"/>
      <url>/blog/2019/04/04/class-Solution/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2019/04/04/hello-world/"/>
      <url>/blog/2019/04/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>print char if not told how many</title>
      <link href="/blog/2019/04/03/print-char-if-not-told-how-many/"/>
      <url>/blog/2019/04/03/print-char-if-not-told-how-many/</url>
      
        <content type="html"><![CDATA[<p>链接：<a href="https://ac.nowcoder.com/acm/problem/22224" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/problem/22224</a><br>来源：牛客网</p><p>题目描述<br>输入一行字符串，原样输出这个字符串。</p><p>输入描述:<br>输入一行，包含一个字符串。<br>输出描述:<br>输出一个字符串。<br>示例1<br>输入<br>复制<br>oi er<br>输出<br>复制<br>oi er</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输出金字塔图形</title>
      <link href="/blog/2019/04/01/%E8%BE%93%E5%87%BA%E9%87%91%E5%AD%97%E5%A1%94%E5%9B%BE%E5%BD%A2/"/>
      <url>/blog/2019/04/01/%E8%BE%93%E5%87%BA%E9%87%91%E5%AD%97%E5%A1%94%E5%9B%BE%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<p>这种题应该先想办法输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * *</code></pre><p>这种靠一边的，然后再加空格变成</p><pre><code>        *      * * *    * * * * *  * * * * * * ** * * * * * * * *</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*for (int j = 0; j &lt; n - i - 1; j++) &#123;</span></span><br><span class="line"><span class="comment">            printf(" ");</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是输出双层金字塔</p><pre><code>    *   ***  ***** **************** *******  *****   ***    *</code></pre><p>那么我们先输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * *</code></pre><p>然后再输出</p><pre><code>** * ** * * * ** * * * * * ** * * * * * * * ** * * * * * ** * * * ** * **</code></pre><p>然后再增加空格</p><pre><code>        *      * * *    * * * * *  * * * * * * ** * * * * * * * ** * * * * * ** * * * ** * **</code></pre><p>然后稍微改一下就可以变成目标形状</p><pre><code>    *   ***  ***** **************** *******  *****   ***    *</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt; <span class="number">-1</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">2</span> * i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选村长</title>
      <link href="/blog/2019/04/01/%E9%80%89%E6%9D%91%E9%95%BF/"/>
      <url>/blog/2019/04/01/%E9%80%89%E6%9D%91%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛村正在进行村长选举，投票人一人一票，牛可乐是候选人A（投票代号为1）、牛能是候选人B（投票代号为2）和牛妹是候选人C（投票代号为3），其他投票代号无效。<br>投票列表用以-1表示结束，请分别统计出他们的得票数。谁的得票超过全部投票人数的半数，就输出谁当选为村长，如“A-yes”表示A当选，全部不过半数，输出“all-NO”。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><p>输入一行，若干个整数，以-1结尾</p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><p>输出五行，前三行表示三个候选人的表票数，然后是总的有效票数，最后一行表示选举结果。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>输入</p><pre><code>1  1  3  2  1  3  2  1  3  3  1  2  4  1  4  1  2   1  2  1 1 -1</code></pre><p>输出</p><pre><code>A=10B=5C=4Tot=19all-NO</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    freopen("input.txt", "r", stdin);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, C = <span class="number">0</span>, Tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != <span class="string">'-'</span>) &#123;</span><br><span class="line">        <span class="comment">//printf("%c", c);</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'1'</span>) &#123;</span><br><span class="line">            A += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'2'</span>) &#123;</span><br><span class="line">            B += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'3'</span>) &#123;</span><br><span class="line">            C += <span class="number">1</span>;</span><br><span class="line">            Tot += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A=%d\n"</span>, A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"B=%d\n"</span>, B);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"C=%d\n"</span>, C);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Tot=%d\n"</span>, Tot);</span><br><span class="line">    <span class="keyword">if</span> (A &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"A-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (B &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"B-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (C &gt; <span class="built_in">ceil</span>(Tot / <span class="number">2.0</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"C-yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"all-NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n元人民币换成1元2元5元的零钱共有多少种兑换方法</title>
      <link href="/blog/2019/04/01/n%E5%85%83%E4%BA%BA%E6%B0%91%E5%B8%81%E6%8D%A2%E6%88%901%E5%85%832%E5%85%835%E5%85%83%E7%9A%84%E9%9B%B6%E9%92%B1%E5%85%B1%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%85%91%E6%8D%A2%E6%96%B9%E6%B3%95/"/>
      <url>/blog/2019/04/01/n%E5%85%83%E4%BA%BA%E6%B0%91%E5%B8%81%E6%8D%A2%E6%88%901%E5%85%832%E5%85%835%E5%85%83%E7%9A%84%E9%9B%B6%E9%92%B1%E5%85%B1%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%85%91%E6%8D%A2%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>链接：<a href="https://ac.nowcoder.com/acm/problem/22214" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/problem/22214</a><br>来源：牛客网</p><p>牛可乐在牛牛商场买了一个帽子，要支付c元金币，牛牛商场一律不找零钱，牛可乐手里有不限数量的面值a元的金币和面值b元的金币，请问牛可乐可以用金币刚好凑出总价c元吗？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n / <span class="number">5</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n - i * <span class="number">2</span> - j * <span class="number">5</span> &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                sum += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Is</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ceilA = <span class="built_in">ceil</span>(c * <span class="number">1.0</span> / a);</span><br><span class="line">    <span class="keyword">int</span> ceilB = <span class="built_in">ceil</span>(c * <span class="number">1.0</span> / b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ceilA; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= ceilB; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * a + j * b == c) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Is(a, b, c)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sum of all proper divisors of a natural number</title>
      <link href="/blog/2019/04/01/Sum-of-all-proper-divisors-of-a-natural-number/"/>
      <url>/blog/2019/04/01/Sum-of-all-proper-divisors-of-a-natural-number/</url>
      
        <content type="html"><![CDATA[<p>Given a natural number, calculate sum of all its proper divisors. A proper divisor of a natural number is the divisor that is strictly less than the number.</p><p>For example, number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.</p><p>Examples :</p><pre><code>Input : num = 10Output: 8// proper divisors 1 + 2 + 5 = 8 Input : num = 36Output: 55// proper divisors 1 + 2 + 3 + 4 + 6 + 9 + 12 + 18 = 55 </code></pre><p>This problem has very simple solution, we all know that for any number ‘num’ all its divisors are always less than and equal to ‘num/2’ and all prime factors are always less than and equal to sqrt(num). So we iterate through ‘i’ till i&lt;=sqrt(num) and for any ‘i’ if it divides ‘num’ , then we get two divisors ‘i’ and ‘num/i’ , continuously add these divisors but for some numbers divisors ‘i’ and ‘num/i’ will same in this case just add only one divisor , e.g; num=36 so for i=6 we will get (num/i)=6 , that’s why we will at 6 in the summation only once. Finally we add one as one is divisor of all natural numbers.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++ program to find sum of all divisors of </span></span><br><span class="line"><span class="comment">// a natural number </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to calculate sum of all proper divisors </span></span><br><span class="line"><span class="comment">// num --&gt; given natural number </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divSum</span><span class="params">(<span class="keyword">int</span> num)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="comment">// Final result of summation of divisors </span></span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// find all divisors which divides 'num' </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=<span class="built_in">sqrt</span>(num); i++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// if 'i' is divisor of 'num' </span></span><br><span class="line"><span class="keyword">if</span> (num%i==<span class="number">0</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// if both divisors are same then add </span></span><br><span class="line"><span class="comment">// it only once else add both </span></span><br><span class="line"><span class="keyword">if</span> (i==(num/i)) </span><br><span class="line">result += i; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">result += (i + num/i); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Add 1 to the result as 1 is also a divisor </span></span><br><span class="line"><span class="keyword">return</span> (result + <span class="number">1</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Driver program to run the case </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> num = <span class="number">36</span>; </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; divSum(num); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>牛村村口要架设一个矩形的广告屏，村长要求广告屏的总像素必须为n，还要求广告屏的长和宽最大可能的接近，而且宽不能大于长，村长找你来计算一下宽和长分别为多少？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">sqrt</span>(n); i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, n / i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能被3整除且至少有一位数字是5</title>
      <link href="/blog/2019/04/01/%E8%83%BD%E8%A2%AB3%E6%95%B4%E9%99%A4%E4%B8%94%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97%E6%98%AF5/"/>
      <url>/blog/2019/04/01/%E8%83%BD%E8%A2%AB3%E6%95%B4%E9%99%A4%E4%B8%94%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97%E6%98%AF5/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输出1~n中能被3整除，且至少有一位数字是5的所有整数.</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><p>输入一行，包含一个整数n。(1 &lt;= n &lt;= 100000)</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>输入</p><pre><code>50</code></pre><p>输出</p><pre><code>1545</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> gewei = i % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> shiwei = (i / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> baiwei = (i / <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> qianwei = (i / <span class="number">1000</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> wanwei = (i / <span class="number">10000</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> shiwanwei = (i / <span class="number">100000</span>) % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">                (i % <span class="number">3</span> == <span class="number">0</span>) &amp;&amp;</span><br><span class="line">                (</span><br><span class="line">                        gewei == <span class="number">5</span> ||</span><br><span class="line">                        shiwei == <span class="number">5</span> ||</span><br><span class="line">                        baiwei == <span class="number">5</span> ||</span><br><span class="line">                        qianwei == <span class="number">5</span> ||</span><br><span class="line">                        wanwei == <span class="number">5</span> ||</span><br><span class="line">                        shiwanwei == <span class="number">5</span></span><br><span class="line">                        )</span><br><span class="line">            ) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm NOIP普及组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断回文数</title>
      <link href="/blog/2019/04/01/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/blog/2019/04/01/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>判断一个数是否为回文数。</p><p>设n是一任意自然数。若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如，若n=1234321，则称n为一回文数；但若n=1234567，则n不是回文数</p><p>实例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, reversedInteger = <span class="number">0</span>, remainder, originalInteger;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"> </span><br><span class="line">    originalInteger = n;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="keyword">while</span>( n!=<span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        remainder = n%<span class="number">10</span>;</span><br><span class="line">        reversedInteger = reversedInteger*<span class="number">10</span> + remainder;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 判断</span></span><br><span class="line">    <span class="keyword">if</span> (originalInteger == reversedInteger)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 是回文数。"</span>, originalInteger);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 不是回文数。"</span>, originalInteger);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断数字是几位数</title>
      <link href="/blog/2019/04/01/%E5%88%A4%E6%96%AD%E6%95%B0%E5%AD%97%E6%98%AF%E5%87%A0%E4%BD%8D%E6%95%B0/"/>
      <url>/blog/2019/04/01/%E5%88%A4%E6%96%AD%E6%95%B0%E5%AD%97%E6%98%AF%E5%87%A0%E4%BD%8D%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>用户输入数字，判断该数字是几位数。</p><p>实例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// n = n/10</span></span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数字是 %d 位数。"</span>, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Greatest Common Divisor Algorithm</title>
      <link href="/blog/2019/03/31/Greatest-Common-Divisor-Algorithm-md/"/>
      <url>/blog/2019/03/31/Greatest-Common-Divisor-Algorithm-md/</url>
      
        <content type="html"><![CDATA[<h1 id="Greatest-Common-Divisor-Algorithm"><a href="#Greatest-Common-Divisor-Algorithm" class="headerlink" title="Greatest Common Divisor Algorithm"></a>Greatest Common Divisor Algorithm</h1><pre><code class="c++"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>{    <span class="keyword">int</span> c = a % b;    <span class="keyword">if</span> (c != <span class="number">0</span>) {        <span class="keyword">return</span> gcd(b, c);    } <span class="keyword">else</span> {        <span class="keyword">return</span> b;    }}<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{    <span class="keyword">int</span> a, b;    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);    <span class="keyword">if</span> (a &gt;= b) {        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, gcd(a, b));    } <span class="keyword">else</span> {        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, gcd(b, a));    }    <span class="keyword">return</span> <span class="number">0</span>;}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Whether a binary tree is balanced or not.md</title>
      <link href="/blog/2019/03/31/Whether-a-binary-tree-is-balanced-or-not-md/"/>
      <url>/blog/2019/03/31/Whether-a-binary-tree-is-balanced-or-not-md/</url>
      
        <content type="html"><![CDATA[<h1 id="Whether-a-binary-tree-is-balanced-or-not"><a href="#Whether-a-binary-tree-is-balanced-or-not" class="headerlink" title="Whether a binary tree is balanced or not"></a>Whether a binary tree is balanced or not</h1><p>The definition of a balanced binary tree is :</p><p>left sub-tree is balanced &amp;&amp; right sub-tree is balanced &amp;&amp; abs(height(left) - height(right))  &lt;= 1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CPP program to check if </span></span><br><span class="line"><span class="comment">a tree is height-balanced or not */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* A binary tree node has data, </span></span><br><span class="line"><span class="comment">pointer to left child and </span></span><br><span class="line"><span class="comment">a pointer to right child */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">  <span class="keyword">public</span>: </span><br><span class="line">  <span class="keyword">int</span> data; </span><br><span class="line">  node* left; </span><br><span class="line">  node* right; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Returns the height of a binary tree */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">height</span><span class="params">(node* node)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Returns true if binary tree </span></span><br><span class="line"><span class="comment">with root as root is height-balanced */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isBalanced</span><span class="params">(node *root)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">int</span> lh; <span class="comment">/* for height of left subtree */</span></span><br><span class="line">  <span class="keyword">int</span> rh; <span class="comment">/* for height of right subtree */</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If tree is empty then return true */</span></span><br><span class="line">  <span class="keyword">if</span>(root == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Get the height of left and right sub trees */</span></span><br><span class="line">  lh = height(root-&gt;left); </span><br><span class="line">  rh = height(root-&gt;right); </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>( <span class="built_in">abs</span>(lh-rh) &lt;= <span class="number">1</span> &amp;&amp; </span><br><span class="line">    isBalanced(root-&gt;left) &amp;&amp; </span><br><span class="line">    isBalanced(root-&gt;right)) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If we reach here then </span></span><br><span class="line"><span class="comment">  tree is not height-balanced */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* UTILITY FUNCTIONS TO TEST isBalanced() FUNCTION */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* returns maximum of two integers */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">return</span> (a &gt;= b)? a: b; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function Compute the "height" </span></span><br><span class="line"><span class="comment">of a tree. Height is the number of </span></span><br><span class="line"><span class="comment">nodes along the longest path from </span></span><br><span class="line"><span class="comment">the root node down to the farthest leaf node.*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">height</span><span class="params">(node* node)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">/* base case tree is empty */</span></span><br><span class="line">  <span class="keyword">if</span>(node == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* If tree is not empty then </span></span><br><span class="line"><span class="comment">  height = 1 + max of left </span></span><br><span class="line"><span class="comment">    height and right heights */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span> + max(height(node-&gt;left), </span><br><span class="line">        height(node-&gt;right)); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Helper function that allocates </span></span><br><span class="line"><span class="comment">a new node with the given data </span></span><br><span class="line"><span class="comment">and NULL left and right pointers. */</span></span><br><span class="line"><span class="function">node* <span class="title">newNode</span><span class="params">(<span class="keyword">int</span> data)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  node* Node = <span class="keyword">new</span> node(); </span><br><span class="line">  Node-&gt;data = data; </span><br><span class="line">  Node-&gt;left = <span class="literal">NULL</span>; </span><br><span class="line">  Node-&gt;right = <span class="literal">NULL</span>; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>(Node); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Driver code </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  node *root = newNode(<span class="number">1</span>); </span><br><span class="line">  root-&gt;left = newNode(<span class="number">2</span>); </span><br><span class="line">  root-&gt;right = newNode(<span class="number">3</span>); </span><br><span class="line">  root-&gt;left-&gt;left = newNode(<span class="number">4</span>); </span><br><span class="line">  root-&gt;left-&gt;right = newNode(<span class="number">5</span>); </span><br><span class="line">  root-&gt;left-&gt;left-&gt;left = newNode(<span class="number">8</span>); </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(isBalanced(root)) </span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Tree is balanced"</span>; </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Tree is not balanced"</span>; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// This code is contributed by rathbhupendra</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>How to publish my writing.md</title>
      <link href="/blog/2019/03/31/How-to-publish-my-writing-md/"/>
      <url>/blog/2019/03/31/How-to-publish-my-writing-md/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Publish-My-Writing-Next-Time"><a href="#How-to-Publish-My-Writing-Next-Time" class="headerlink" title="How to Publish My Writing Next Time"></a>How to Publish My Writing Next Time</h1><p>First, type in </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo new <span class="string">"How to * .md"</span></span><br></pre></td></tr></table></figure><p>then in folder /source/_posts/ we can see our newly generated markdown file.</p><p>Then open and edit it.</p><p>After editing, type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>g standards for generate</p><p>Then in order to preview, we can type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo server -p 8080</span><br></pre></td></tr></table></figure><p>p standards for port</p><p>then we can preview in our browser.</p><p>If it is ok, we can type in</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo d</span><br></pre></td></tr></table></figure><p>d standards for deploy</p><p>to publish it.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
